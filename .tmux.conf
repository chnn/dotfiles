setw -g mode-keys vi
set -g mouse on

# control-space is prefix
unbind C-b
set -g prefix C-Space

# prefix control-space switches to last active window
bind C-Space last-window

# remove 1s when using esc in nvim
set -sg escape-time 0

# more scollback (default is 2000)
set-option -g history-limit 10000

# use emacs key bindings for command prompt (:)
set -g status-keys emacs

# begin selection with v
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# copy / yank with y
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# auto copy with mouse selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel

# prefix r reloads tmux config
bind r source-file ~/.tmux.conf

# prefix b toggles statusline
bind-key b set-option status

# open new windows with current working directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# window navigation
bind -r C-n next-window
bind -r C-p previous-window

# renumber windows when one is closed
set -g renumber-windows on

# use 1-based indexing for windows
set -g base-index 1
setw -g pane-base-index 1

# pane navigation
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# disable confirm before killing pane
bind-key x kill-pane

# pane sizing
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 10
bind -r H resize-pane -L 10
bind -r _ resize-pane -Z
bind = select-layout even-vertical
# ;          - toggle last active pane
# {          - move current pane left
# }          - move current pane right
# q [number] - jump to pane
# !          - convert pane to window
# o          - switch to next pane

# window titles
set -g set-titles on
set -g set-titles-string "#T"

# statusbar
set -g status-interval 5
set -g status-justify centre
set -g status-position bottom
set -g status-bg color0
set -g status-left ''
set -g status-right ''
set -g window-status-separator " "

# remind yourself of the available colors:
#
#     for i in {0..15}; do
#         printf "\x1b[38;5;${i}mcolor${i}\x1b[0m\n"
#     done
#
set -g window-status-format "#[fg=color8] #{b:pane_current_path}:#W "
set -g window-status-current-format "#[fg=color0, bg=color4] #{b:pane_current_path}:#W "

# pane borders
set -g pane-border-style fg=colour8
set -g pane-active-border-style fg=colour8
